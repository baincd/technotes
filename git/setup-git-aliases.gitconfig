# Add to ~/.gitconfig

# 1) Execute:
# ln -s ~/wc/technotes/git/setup-git-aliases.gitconfig ~/.git-aliases.gitconfig
#
# 2) Add to ~/.gitconfig:
# [include]
#     path = ~/.git-aliases.gitconfig

[alias]
	diffiw = diff --ignore-space-change --ignore-space-at-eol #Diff Ignore Whitespace
	id = rev-parse --default HEAD
	addall = add -A -v
	commitall = !git addall && git commit
	pushall = !git commitall && git push
	staged = diff --cached
	ffup = merge --ff-only @{u}
	ff = merge --ff-only
	merge2 = merge --strategy-option=patience
	info = show --pretty=fuller --name-status
	s = status --short --branch
	logd = log --decorate
	logg = log --graph --oneline --date=relative --format=format:'%C(bold blue)%h%C(reset) %C(bold green)%ad%C(reset) %C(bold cyan)%<(8,trunc)%an%C(reset) %s%C(bold yellow)%d%C(reset)'
	logv = log --graph --oneline --date=local --format=format:'%C(bold blue)%h%C(reset) %C(bold green)%ad%C(reset) %C(bold cyan)%an%C(reset) %C(bold yellow)%d%C(reset)%n%w(0,8,8)%B'
	logw = "!f() { gitk "$@" & }; f" # Log Window
	commitw = "!f() { git gui "$@" & }; f" # Commit Window
	pullr = pull --rebase
	pullm = pull
	pullf = pull --ff-only
	fa = fetch --all
	br = checkout -b
	brr = branch -m # Branch Rename
	track = branch -u
	untrack = branch --unset-upstream
	setdefaultpushremote = config remote.pushdefault
	# Based on alias from https://haacked.com/archive/2014/07/28/github-flow-aliases/
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git --no-pager log --color=always HEAD~1..HEAD --pretty='%C(dim)%h%C(reset) %s:' --stat && echo '' && git reset HEAD~1 --hard
	shallow-clone = clone --depth 1

	feature-start = "!f () {                                                  \
		if test -n \"$(git status --short 2> /dev/null)\"; then                 \
			echo \"\\033[01;31mERROR!\\033[0m Working Copy isn't clean!\";        \
		else                                                                    \
			git fetch --all &&                                                    \
			git br \"$1\" origin/master;                                          \
		fi;                                                                     \
	}; f"

	feature-end = "!f () {                                                           \
		if test -n \"$(git status --short 2> /dev/null)\"; then                        \
			echo \"\\033[01;31mERROR!\\033[0m Working Copy isn't clean!\";               \
		else                                                                           \
			local OLD_BRANCH=\"$(git rev-parse --abbrev-ref HEAD 2> /dev/null)\" &&      \
			git fetch --all &&                                                           \
			(git branch master origin/master 2> /dev/null || true) &&                    \
			git checkout master &&                                                       \
			(git ffup || true)  &&                                                       \
			git branch -D \"$OLD_BRANCH\";                                               \
		fi;                                                                            \
	}; f"

	# Cache SSH credentials
	# setup in ~/.bashrc
	# alias ssh-cache='eval `ssh-agent` && ssh-add'
